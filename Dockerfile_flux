FROM alpine as src
RUN apk add git && \
    git clone https://github.com/InfluxCommunity/flux.git /flux && \
    cd /flux && git checkout v0.195.1

FROM rust:1.70 as RUSTBUILD

FROM golang:1.19 as PKGCONFIG
COPY --from=src /flux/go.mod /flux/go.sum /go/src/github.com/InfluxCommunity/flux/
RUN cd /go/src/github.com/InfluxCommunity/flux && \
    go build -o /usr/local/bin/cgo-pkgbuild github.com/influxdata/pkg-config

FROM golang:1.19 as BUILDER

# Install common packages
RUN apt-get update && \
    apt-get install --no-install-recommends -y \
    openssl libtinfo5 ruby \
    ca-certificates curl file gnupg \
    build-essential cmake nodejs npm \
    libxml2-dev libssl-dev libsqlite3-dev zlib1g-dev \
    autoconf automake autotools-dev libtool xutils-dev valgrind && \
    rm -rf /var/lib/apt/lists/*

# Install rust and rust tooling
COPY --from=RUSTBUILD /usr/local/cargo /usr/local/cargo
COPY --from=RUSTBUILD /usr/local/rustup /usr/local/rustup

ENV RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:/usr/local/bin:/usr/local/ragel7/bin:$PATH
RUN rustup component add rustfmt clippy && \
    # Use sccache rustc wrapper for friendly build caching
    cargo install sccache && \
    cargo install wasm-pack && \
    rustup component add rust-std --target wasm32-unknown-unknown
# This is defined separately, so it doesn't attempt to use sccache until it is
# actually installed.
ENV RUSTC_WRAPPER=sccache

# Install additional tooling and requirements for building flux.
ENV COLM_VERSION=0.14.2
ENV RAGEL7_VERSION=7.0.1
COPY --from=src /flux/.thurston.asc thurston.asc
RUN gpg --import thurston.asc && \
    curl https://www.colm.net/files/colm/colm-${COLM_VERSION}.tar.gz -O && \
    curl https://www.colm.net/files/colm/colm-${COLM_VERSION}.tar.gz.asc -O && \
    gpg --verify colm-${COLM_VERSION}.tar.gz.asc colm-${COLM_VERSION}.tar.gz && \
    tar -xzf colm-${COLM_VERSION}.tar.gz && \
    cd colm-${COLM_VERSION}/ && \
    ./configure --prefix=/usr/local/ragel7 --disable-manual && \
    make && \
    make install && \
    cd .. && rm -rf colm-${COLM_VERSION}* && \
    curl https://www.colm.net/files/ragel/ragel-${RAGEL7_VERSION}.tar.gz -O && \
    curl https://www.colm.net/files/ragel/ragel-${RAGEL7_VERSION}.tar.gz.asc -O && \
    gpg --verify ragel-${RAGEL7_VERSION}.tar.gz.asc ragel-${RAGEL7_VERSION}.tar.gz && \
    tar -xzf ragel-${RAGEL7_VERSION}.tar.gz && \
    cd ragel-${RAGEL7_VERSION}/ && \
    ./configure --prefix=/usr/local/ragel7 --with-colm=/usr/local/ragel7 --disable-manual && \
    make && \
    make install && \
    cd .. && rm -rf ragel-${RAGEL7_VERSION}*

COPY --from=src /flux/install_flatc.sh .
RUN ./install_flatc.sh

# Install pkg-config helper
COPY --from=PKGCONFIG /usr/local/bin/cgo-pkgbuild /usr/local/bin/cgo-pkgbuild

# Add builder user
ENV UNAME=builder
ARG UID=1000
ARG GID=1000
RUN groupadd -g $GID -o $UNAME
RUN useradd -m -u $UID -g $UNAME -s /bin/bash $UNAME

ENV HOME=/home/$UNAME \
    CARGO_HOME=/home/$UNAME/.cargo \
    GOPATH=/home/$UNAME/go \
    PKG_CONFIG=/usr/local/bin/cgo-pkgbuild

WORKDIR $HOME

COPY --from=src /flux $HOME/flux

RUN cd $HOME/flux && go build -o /go/bin/pkg-config github.com/influxdata/pkg-config && \
    ./gotool.sh github.com/goreleaser/goreleaser release --rm-dist --snapshot

COPY . /home/builder/fluxpipe

RUN cd /home/builder/fluxpipe && \
    sh ./build.sh && \
    strip fluxpipe-server && strip fluxpipe-lambda && upx fluxpipe-server

FROM scratch as export

COPY --from=BUILDER /home/builder/fluxpipe/fluxpipe-server /fluxpipe-server
COPY --from=BUILDER /home/builder/fluxpipe/fluxpipe-lambda /fluxpipe-lambda
COPY --from=BUILDER /home/builder/fluxpipe/fluxpipe.a /fluxpipelib.a
