name: Build-n-Release

on:
  release:
    types: [created]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build Fluxpipe
      run: docker build --target export -t test . -f Dockerfile_musl --output out
        

    - name: Get Timestamp
      if: github.event_name != 'pull_request'
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        timeZone: 0
        format: 'YYYYMMDDHHmmss'
        
    - run: |
        echo "VERSION=${{  github.ref_name }}" >> $GITHUB_ENV
        echo "TIME=${{ steps.time.outputs.time }}" >> $GITHUB_ENV
    
    - name: Upload release
      if: github.event_name != 'pull_request'
      uses: boxpositron/upload-multiple-releases@1.0.7
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_config: |
            out/fluxpipe-server
            out/fluxpipe-lambda
            out/fluxpipelib.a
        tag_name: ${{ env.VERSION }}
        release_name: fluxpipe_${{ env.VERSION }}
        draft: false
        prerelease: false
        overwrite: true   
        
    - name: Log in to the Container registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker Build and push (server)
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v3.0.0
      with:
        context: .
        push: true
        tags: |
           ghcr.io/metrico/fluxpipe:latest
           ghcr.io/metrico/fluxpipe:${{ env.VERSION }}
           
    - name: Docker Build and push (lambda)
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v3.0.0
      with:
        context: .
        file: Dockerfile.lambda
        push: true
        tags: |
           ghcr.io/metrico/fluxpipe-lambda:latest
           ghcr.io/metrico/fluxpipe-lambda:${{ env.VERSION }}

